//
//  SoftFido2UserClient.iig
//  SoftFIDO2
//
//  Created by Eddie Hua on 2020/9/2.
//  Copyright © 2020 GoTrustID. All rights reserved.
//

#ifndef SoftFido2UserClient_h
#define SoftFido2UserClient_h

#include <Availability.h>
#include <DriverKit/IOUserClient.iig>
#include "u2f_hid.h"


class SoftFido2UserClient: public IOUserClient
{
public:
    virtual bool init() override;
    virtual void free() override;

    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;

    virtual kern_return_t ExternalMethod(uint64_t selector,
                                         IOUserClientMethodArguments* arguments,
                                         const IOUserClientMethodDispatch* dispatch,
                                         OSObject* target,
                                         void* reference) override;
    
    // (好像) IOConnectMapMemory 會觸發 CopyClientMemoryForType
//    virtual kern_return_t CopyClientMemoryForType(uint64_t type,
//                                                  uint64_t * options,
//                                                  IOMemoryDescriptor ** memory) override;

    // SoftU2F 有 2 個 Public Function，在這裡照 iig 的格式做點小修改
    //virtual IOReturn clientClose(void) override;
    virtual kern_return_t frameReceived(IOMemoryDescriptor *report, OSAction* action);
    
    
    virtual kern_return_t dump(uint64_t address, uint64_t length);
    
protected:
    //kern_return_t (*IOUserClientMethodFunction)(OSObject * target, void * reference, IOUserClientMethodArguments * arguments);
    //static kern_return_t sSendFrame(SoftFido2UserClient *target, uint64_t* reference, IOUserClientMethodArguments *arguments);
    //virtual kern_return_t sendFrame(U2FHID_FRAME *frame, size_t frameSize);
    virtual kern_return_t sendReport(IOMemoryDescriptor* report);
    
    //static kern_return_t sNotifyFrame(SoftFido2UserClient *target, uint64_t* reference, IOUserClientMethodArguments *arguments);
    //virtual kern_return_t notifyFrame(uint32_t refCount);
};

#endif /* SoftFido2UserClient_h */
